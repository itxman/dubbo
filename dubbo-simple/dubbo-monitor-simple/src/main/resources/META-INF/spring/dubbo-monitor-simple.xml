<!--
 - Copyright 1999-2011 Alibaba Group.
 -  
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 -  
 -      http://www.apache.org/licenses/LICENSE-2.0
 -  
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="location" value="classpath:dubbo.properties" />
    </bean>
	
	<bean id="monitorService" class="com.alibaba.dubbo.monitor.simple.SimpleMonitorService">
		<property name="statisticsDirectory" value="${dubbo.statistics.directory}" />
		<property name="chartsDirectory" value="${dubbo.charts.directory}" />
	</bean>
	
	<dubbo:application name="${dubbo.application.name}" owner="${dubbo.application.owner}" />
	
	<dubbo:registry address="${dubbo.registry.address}" />
	
	<dubbo:protocol name="dubbo" port="${dubbo.protocol.port}" />
	
	<dubbo:service interface="com.alibaba.dubbo.monitor.MonitorService" ref="monitorService" delay="-1" />
	
	<dubbo:reference id="registryService" interface="com.alibaba.dubbo.registry.RegistryService" />

    <bean class="com.xkeshi.core.context.ApplicationContextHelper"/>

    <bean id="simpleMonitorService" class="com.alibaba.dubbo.monitor.simple.SimpleMonitorService"/>

    <bean id="monitorDAO" class="com.alibaba.dubbo.monitor.simple.dao.MonitorDAO">
        <property name="jdbcTemplate">
            <ref bean="jdbcTemplate" />
        </property>
    </bean>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate" abstract="false"
          lazy-init="false" autowire="default">
        <property name="dataSource">
            <ref bean="xBusinessDatasource" />
        </property>
    </bean>

    <!-- =====================================Business datasource start=====================================-->
    <bean id="xBusinessDatasource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url"
                  value="${business.jdbc.url}" />
        <property name="username" value="${business.jdbc.user}" />
        <property name="password" value="${business.jdbc.password}" />
        <!-- Connection Pooling Info -->
        <property name="filters" value="wall,stat,log4j" />
        <property name="maxActive" value="${business.jdbc.pool.maxActive}" />
        <property name="initialSize" value="${business.jdbc.pool.initialSize}" />
        <property name="maxWait" value="${business.jdbc.pool.maxWait}" />
        <property name="minIdle" value="${business.jdbc.pool.minIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${business.jdbc.pool.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${business.jdbc.pool.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${business.jdbc.pool.maxPoolPreparedStatementPerConnectionSize}" />
        <!--监控信息输出到日志的时间-->
        <property name="timeBetweenLogStatsMillis" value="300000" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true" />
        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="180" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
    </bean>

</beans>